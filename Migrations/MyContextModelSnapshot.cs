// <auto-generated />
using System;
using CRUDelicious.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CRUDelicious.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CRUDelicious.Models.Chef", b =>
                {
                    b.Property<int>("chefId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("dateOfBirth");

                    b.Property<string>("firstName")
                        .IsRequired();

                    b.Property<string>("lastName")
                        .IsRequired();

                    b.HasKey("chefId");

                    b.ToTable("Chef");
                });

            modelBuilder.Entity("CRUDelicious.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("calories");

                    b.Property<int>("chefId");

                    b.Property<DateTime>("created_at");

                    b.Property<string>("description")
                        .IsRequired();

                    b.Property<string>("dishName")
                        .IsRequired();

                    b.Property<int>("tastiness");

                    b.Property<DateTime>("updated_at");

                    b.HasKey("DishId");

                    b.HasIndex("chefId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("CRUDelicious.Models.Dish", b =>
                {
                    b.HasOne("CRUDelicious.Models.Chef", "Chef")
                        .WithMany("CreatedDishes")
                        .HasForeignKey("chefId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
